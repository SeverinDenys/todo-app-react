1 - how to remove element from object based on id

why can't i write this way
1 variant

 const newTaskList = tasks.filter(
      (task) => task.id !== idToRemove
    );

task.jsx
function Task({ task, deleteTask, newTaskList }) {
  const handleClick = () => {
    deleteTask(newTaskList[0].id);
  };


2 variant 
const [newTask, setNewTask] = useState([]);


2 - how to save data in browser after page reload in react?
Am i allowed to use this?
https://usehooks.com/usesessionstorage

solution
https://www.freecodecamp.org/news/how-to-use-localstorage-with-react-hooks-to-set-and-get-items/

3- explain me more in detail why we use useEffect in this case for the data


4 - how to get the value of container when the checkbox button is clicked?

- create a boolean state 
- if the checkbox is true - it should change the text style
reference - https://dev.to/collegewap/how-to-work-with-checkboxes-in-react-44bc

- how to cross the text on checked mark?
reference- https://www.geeksforgeeks.org/how-to-add-strikethrough-on-text-in-reactjs/

5 - how to check checkbox value in local storage react

1 variant - 
  useEffect(() => {
    localStorage.setItem("isChecked", JSON.stringify(isChecked));
  }, [isChecked]);

 const [isChecked, setIsChecked] = useState(
    storedCheckedBox || false
  );


 const storedCheckedBox = JSON.parse(
  localStorage.getItem("isChecked")
);

it didn't work because the moment I check 1 checkbox after reload every checkbox become checked and if I uncheck 1 checkbox after reload all off them become unchecked

при нажатии на кнопку едит оно должно взять конкретный value с isEditing = true и перенести его в input

у меня уже рабоает isEditing - осталось его перенести в inputValue и отобразить
мне нужно inputValue как-то перенести в task.jsx





/* eslint-disable react/prop-types */

// Style for the strikethrough effect
// const strikethroughStyle = {
//   textDecoration: "line-through",
//   color: "red",
//   background: task.isChecked ? "yellow" : "white",
// };

function Task({
  task,
  deleteTask,
  toggleTask,
  editTask,
  inputValue,
}) {
  const checkHandler = () => {
    toggleTask(task.id, !task.isChecked);
  };

  const editHandler = () => {
    editTask(task.id, !task.isEditing);
  };

  const strikethroughStyle = {
    textDecoration: task.isChecked ? "line-through" : "none",

    background: task.isChecked ? "yellow" : "white",
  };

  const changeContainerBG = {
    background: task.isEditing ? "yellow" : "white",
  };

  const handleClick = () => {
    deleteTask(task.id);
  };

  return (
    <div className="task-container" style={strikethroughStyle}>
      <p className="task-container-text">
        <input
          type="checkbox"
          checked={task.isChecked}
          className="checkbox"
          onChange={checkHandler}
        />

        {task.isChecked ? (
          <span>{task.text} </span> // is there a way to use it just with help of css and not adding it to jsx
        ) : (
          task.text /// why like this and not {task.text} ?
        )}
      </p>
      <div className="image-container">
        <img
          src="public/images/icons-edit.png"
          alt="Edit icon"
          className="icon"
          onClick={editHandler}
        />
        <img
          src="public/images/icons-delete.png"
          alt="delete icon"
          className="icon"
          onClick={handleClick}
        />
      </div>
    </div>
  );
}

export default Task;
